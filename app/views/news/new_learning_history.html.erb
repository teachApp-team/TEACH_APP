<div id="javascropt_header">
<%= render partial: 'share/header' %>
</div>

<section id="StopwatchByHand" >
  <%=render partial: 'share/title', locals:{each_title: 'Start Learning'}%>
  <div class="stopwatch_container" style="text-align: center;">
        <h4 class="stopwatch_title">StopWatch</h4>
        <input id="SureHandTimer" type="time" step="1" value="00:00:00" style="padding: 5px; font-size: 20px; border-color:#3366FF;">
        <div style="text-align: center; margin-top:10px;">
          <input type="button" value="確定" style="font-size: 12px; background-color: white;color: midnightblue; border-radius: 6px;" onclick="SureHandTimer()"></input>
        </div>
  </div>
</section>

<section id="new-learning-history" class="new_learning_history_section">  
<%=render partial: 'share/title', locals:{each_title: 'Start Learning'}%>

  <div class="new_learning_history_container">
    <div class="stopwatch_container" id="StopwatchByButton">
      <h4 class="stopwatch_title">StopWatch</h4>
      <h6 id="timerLabel">
        <div class="timer" id="timer">
          00:00:00
        </div>
      </h6>
    </div>

    <div class="information_container">
      <div class="text_container">
        <label for="exampleFormControlTextarea1">学習教材</label>
        <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
      </div>
      <div class="comment_contaner">
        <label for="exampleFormControlTextarea1">コメント</label>
        <textarea class="form-control" id="exampleFormControlTextarea2" rows="3"></textarea>
      </div>
    </div>

    <div id="new_history_buttons">
      <div class="each_history_buttons" id="before_start">
        <input type="button" class="myButton start" id="startbtn" onclick="startTimer()" value="スタート" >
      </div>
      <div id="while_studying">
        <input type="button" class="myButtons pause" id="pausebtn" onclick="stopTimer()" value="一時停止">
        <input type="button" class="myButtons finish" id="finishbtn1" value="完了">
      </div>
      <div id="pause">
        <input type="button" class="myButtonss restart" id="restartbtn" value="再開">
        <input type="button" class="myButtonss reset" id="resetbtn" value="リセット">
        <input type="button" class="myButtonss finish" id="finishbtn2" value="完了">
      </div>
      <div id="confirmation">
        <p id="confirmation_comment">本当にリセットしてよろしいですか？</p>
        <input type="button" class="myButtons sure" id="surebtn" value="はい">
        <input type="button" class="myButtons cancel" id="cancelbtn" value="いいえ">
      </div>
      <div id ="finish">
        <input type="button" class="myButtons share" id="sharebtn" value="上記の内容でシェア">
        <input type="button" class="myButtons share" id="stillbtn" value="まだ学習を続ける">
      </div>
      <div id="hand-timer-button" style="text-align: center; margin-top:20px;">
        <input type="button" value="手動で入力はこちら" style="font-size: 12px; background-color: white;color: midnightblue; border-radius: 6px;" onclick="HandTimer()"></input>
      </div>
    </div>
    <div id="attention-message" style="font-size: 13px;">ストップウォッチ起動中はページ遷移しないで下さい。<br>遷移したい場合は<span style="color: red;">リセット</span>するか学習を<span style="color: red;">完了</span>させてください。</div>
  </div>
</section>

<script type="text/javascript">


$('#while_studying').hide();
$('#pause').hide();
$('#finish').hide();
$('#confirmation').hide();
$('#StopwatchByHand').hide();

var pausetime;
var w = null;
  function HandTimer() {
    $('#new-learning-history').hide();
    $('#StopwatchByHand').fadeIn(1500);
  }

  function SureHandTimer() {
    const t = document.getElementById('SureHandTimer')
    const timer = document.getElementById('timer')
      let [h, m, s] = (t.value).split(':')
      if (s === undefined) {
        s = '00';
      };
      $('#StopwatchByHand').hide();
      $('#new-learning-history').fadeIn(1500);
      $('#finish').fadeIn(1500);
      $('#before_start').hide();
      $('#stillbtn').hide();
      document.getElementById("timer").innerHTML = `${h}:${m}:${s}`
  }

  function startTimer() {
    if (typeof(Worker) !== "undefined"){
      if (w==null) {
        w = new Worker('<%= javascript_path "multiple.js" %>'); }
      w.onmessage = function (event) {
        second = 0;
        minute = 0;
        hour = 0;
        totalsecond = Number(event.data.slice(6,8))+second;
        totalminute = Number(event.data.slice(3,5))+minute;
        totalhour = Number(event.data.slice(0,2))+hour;
        totalsecond1 = ( '00' + totalsecond ).slice( -2 );
        totalminute1 = ( '00' + totalminute ).slice( -2 );
        totalhour1 = ( '00' + totalhour ).slice( -2 );
        document.getElementById("timer").innerHTML = String(totalhour1)+":"+String(totalminute1)+":"+String(totalsecond1);
      };
    } else {
        document.getElementById("timer").innerHTML = "このブラウザではWeb Workersは利用できません";
    }

    $('#while_studying').fadeIn(1500);
    $('#hand-timer-button').hide();
    $('#javascropt_header').hide();
    $('#javascript_margin').hide();
    $('#before_start').hide();
    $('#new_history_buttons').css('background-color', 'midnightblue');
    $('.stopwatch_container').css('background-color', 'midnightblue');
    $('#timerLabel').css('color', 'white');
    $('#timerLabel').css('font-size', '25px');
  }
  function stopTimer(){
    stoptime= document.getElementById("timer").innerHTML;
    console.log(stoptime);
    console.log(stoptime.slice(6,8)); 
    console.log(stoptime.slice(3,5)); 
    console.log(stoptime.slice(0,2)); 
    second = stoptime.slice(6,8)
    minute = stoptime.slice(3,5)
    hour = stoptime.slice(0,2)
    pausetime = hour+minute+second;
    if (w == null) {
      wb.terminate();
      wb = null;
    } else {
      w.terminate();
      w = null;
    };
    $('#pause').fadeIn(1500);
    $('#while_studying').hide();
    $('#hand-timer-button').hide();
    $('#new_history_buttons').css('background-color', '#778899');
    $('.stopwatch_container').css('background-color', '#778899');
    $('.stopwatch_title').css('color', 'white');
  } 
  $('#resetbtn').click(function() {
    $('#confirmation').fadeIn(1500);
    $('#while_studying').hide();
    $('#hand-timer-button').hide();
    $('#pause').hide();
    $('#new_history_buttons').css('background-color', '#778899');
    $('#confirmation_comment').css('color', 'white');
    $('.stopwatch_container').css('background-color', '#778899');
  });
$('#surebtn').click(function() {
  document.getElementById("timer").innerHTML = "00:00:00";
  $('#hand-timer-button').fadeIn(1500);
  $('#before_start').fadeIn(1500);
  $('#confirmation').hide();
  $('#javascropt_header').fadeIn(1500);
  $('#javascript_margin').fadeIn(1500);
  $('#new_history_buttons').css('background-color', '#BBBBBB');
  $('.stopwatch_container').css('background-color', '#BBBBBB');
});
$('#cancelbtn').click(function() {
  $('#pause').fadeIn(1500);
  $('#confirmation').hide();
  $('#hand-timer-button').hide();
});

$('#finishbtn1').click(function() {
  if (w == null) {
      wb.terminate();
      wb = null;
    } else {
      w.terminate();
      w = null;
    };
  $('#finish').fadeIn(1500);
  $('#while_studying').hide();
  $('#pause').hide();
  $('#new_history_buttons').css('background-color', 'midnightblue');
  $('.stopwatch_container').css('background-color', 'midnightblue');
  $('#timerLabel').css('color', 'white');
  $('#timerLabel').css('font-size', '25px');
  $('.stopwatch_title').css('color', 'white');
});

$('#finishbtn2').click(function() {
  $('#finish').fadeIn(1500);
  $('#while_studying').hide();
  $('#pause').hide();
  $('#new_history_buttons').css('background-color', 'midnightblue');
  $('.stopwatch_container').css('background-color', 'midnightblue');
  $('#timerLabel').css('color', 'white');
  $('#timerLabel').css('font-size', '25px');
  $('.stopwatch_title').css('color', 'white');
});

var wb = null;
// 再開
$('#restartbtn').click(function() {
  $('#while_studying').fadeIn(1500);
  $('#pause').hide();
  console.log("リスタートボタン押しました");
  if (typeof(Worker) !== "undefined"){
      if (wb==null) {
      wb = new Worker('<%= javascript_path "worker.js" %>');
      wb.postMessage(pausetime);
      console.log("worker.jsに送信");}
    wb.onmessage = function (events) {
      totalsecond = Number(events.data.slice(6,8));
      totalminute = Number(events.data.slice(3,5));
      totalhour = Number(events.data.slice(0,2));
      
      totalsecond1 = ( '00' + totalsecond ).slice( -2 );
      totalminute1 = ( '00' + totalminute ).slice( -2 );
      totalhour1 = ( '00' + totalhour ).slice( -2 );
      console.log("totalsecond1は"+totalsecond1);
      document.getElementById("timer").innerHTML = totalhour1+":"+totalminute1+":"+totalsecond1;
    }; 
  } else {
    document.getElementById("timer").innerHTML = "このブラウザではWeb Workersは利用できません";
  }
  $('#new_history_buttons').css('background-color', 'midnightblue');
  $('.stopwatch_container').css('background-color', 'midnightblue');
  $('#timerLabel').css('color', 'white');
  $('#timerLabel').css('font-size', '25px');
  $('#hand-timer-button').hide();
});

$('#stillbtn').click(function() {
  $('#pause').fadeIn(1500);
  $('#before_start').hide();
  $('#finish').hide();
  $('#new_history_buttons').css('background-color', '#778899');
  $('.stopwatch_container').css('background-color', '#778899');
  $('.stopwatch_title').css('color', 'white');
});

$("#sharebtn").click(function(){
  var finish_stoptime = document.getElementById("timer").innerHTML;
  var finish_second = finish_stoptime.slice(6,8)
  var finish_minute = finish_stoptime.slice(3,5)
  var finish_hour = finish_stoptime.slice(0,2)
  var sum_time = `${finish_hour}:${finish_minute}:${finish_second}`
  var user_name_id = gon.user_id;
  var teacher_subject = gon.teacher_subject;
  
  $.ajax({
      url: "ajax_create_lh",
      type: "POST",
      data: JSON.stringify({
        learning_time: sum_time,
        learning_text: $('#exampleFormControlTextarea1')[0].value,
        comment: $('#exampleFormControlTextarea2')[0].value,
        subject: teacher_subject,
        student_id: user_name_id
      }),
      contentType: 'application/json',
      dataType: "json",
      success: function(data) {
        window.location.href = '/news_field';
      },
      error: function(data) {
         window.location.href = '/test';
      }
  });
});
</script>



